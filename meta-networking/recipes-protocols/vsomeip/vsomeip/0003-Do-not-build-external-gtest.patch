From e012f91a73af7469ef6f660c3a6a752430a4d649 Mon Sep 17 00:00:00 2001
From: Yi Zhao <yi.zhao@windriver.com>
Date: Tue, 11 Jul 2023 16:53:46 +0800
Subject: [PATCH] Do not build external gtest

We don't need to build external gtest since we already depend on
googletest.

Upstream-Status: Inappropriate [embedded specific]

Signed-off-by: Yi Zhao <yi.zhao@windriver.com>
---
 CMakeLists.txt                    | 30 ++----------
 test/network_tests/CMakeLists.txt | 80 -------------------------------
 2 files changed, 3 insertions(+), 107 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index e7a92ec6..f6c680d4 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -18,14 +18,6 @@ set (VSOMEIP_VERSION ${VSOMEIP_MAJOR_VERSION}.${VSOMEIP_MINOR_VERSION}.${VSOMEIP
 set (PACKAGE_VERSION ${VSOMEIP_VERSION}) # Used in documentation/doxygen.in
 set (CMAKE_VERBOSE_MAKEFILE off)
 
-if (NOT GTEST_ROOT)
-    if (DEFINED ENV{GTEST_ROOT})
-        set(GTEST_ROOT $ENV{GTEST_ROOT})
-    else()
-        set(GTEST_ROOT "n/a" CACHE STRING "Path to root folder of googletest. Must be set for building the tests.")
-    endif()
-endif()
-
 ###################################################################################################
 # see http://www.cmake.org/Wiki/CMake/Tutorials/How_to_create_a_ProjectConfig.cmake_file
 ###################################################################################################
@@ -630,27 +622,11 @@ find_package(benchmark)
 ##############################################################################
 # google test
 
-# check for set environment variable
-if(${GTEST_ROOT} STREQUAL "n/a")
-    message(STATUS "GTEST_ROOT is not defined. For building the tests the variable
-             GTEST_ROOT has to be defined. Tests can not be built.")
-    # early exit
-    return()  # test can not be build -> make commands build_tests and check are not available
-else()
-    message(STATUS "GTEST_ROOT is set. gtest root path set to ${GTEST_ROOT}")
+find_package(GTest)
+if (NOT GTest_FOUND)
+    message(WARNING "GTest is not found. Tests can not be built.")
 endif()
 
-# build google test as static library (always) -> therefore deactivate BUILD_SHARED_LIBS in case it is active
-set(BUILD_SHARED_LIBS_AUTOMATIC_OFF 0)
-if ("${BUILD_SHARED_LIBS}" STREQUAL "ON")
-    set(BUILD_SHARED_LIBS OFF)
-    set(BUILD_SHARED_LIBS_AUTOMATIC_OFF 1)
-endif()
-add_subdirectory(${GTEST_ROOT} ${CMAKE_CURRENT_BINARY_DIR}/gtest EXCLUDE_FROM_ALL)
-if ("${BUILD_SHARED_LIBS_AUTOMATIC_OFF}" STREQUAL "1")
-    set(BUILD_SHARED_LIBS ON)
-    set(BUILD_SHARED_LIBS_AUTOMATIC_OFF 0)
-endif()
 
 
 
diff --git a/test/network_tests/CMakeLists.txt b/test/network_tests/CMakeLists.txt
index 6a148604..a501b6a7 100644
--- a/test/network_tests/CMakeLists.txt
+++ b/test/network_tests/CMakeLists.txt
@@ -3633,86 +3633,6 @@ if(NOT ${TESTS_BAT})
 
 endif()
 
-##############################################################################
-# Add for every test a dependency to gtest
-##############################################################################
-
-if(NOT ${TESTS_BAT})
-    add_dependencies(${TEST_CONFIGURATION} gtest)
-    add_dependencies(${TEST_APPLICATION} gtest)
-    add_dependencies(${TEST_APPLICATION_SINGLE_PROCESS_NAME} gtest)
-    add_dependencies(${TEST_APPLICATION_AVAILABILITY_NAME} gtest)
-    add_dependencies(${TEST_MAGIC_COOKIES_CLIENT} gtest)
-    add_dependencies(${TEST_MAGIC_COOKIES_SERVICE} gtest)
-    add_dependencies(${TEST_HEADER_FACTORY} gtest)
-    add_dependencies(${TEST_HEADER_FACTORY_CLIENT} gtest)
-    add_dependencies(${TEST_HEADER_FACTORY_SERVICE} gtest)
-    add_dependencies(${TEST_LOCAL_ROUTING_SERVICE} gtest)
-    add_dependencies(${TEST_LOCAL_ROUTING_CLIENT} gtest)
-    add_dependencies(${TEST_EXTERNAL_LOCAL_ROUTING_SERVICE} gtest)
-    add_dependencies(${TEST_PAYLOAD_SERVICE} gtest)
-    add_dependencies(${TEST_PAYLOAD_CLIENT} gtest)
-    add_dependencies(${TEST_BIG_PAYLOAD_SERVICE} gtest)
-    add_dependencies(${TEST_BIG_PAYLOAD_CLIENT} gtest)
-    add_dependencies(${TEST_CLIENT_ID_SERVICE} gtest)
-    add_dependencies(${TEST_CLIENT_ID_UTILITY} gtest)
-    add_dependencies(${TEST_DEBOUNCE_CLIENT} gtest)
-    add_dependencies(${TEST_DEBOUNCE_SERVICE} gtest)
-    add_dependencies(${TEST_SUBSCRIBE_NOTIFY_SERVICE} gtest)
-    add_dependencies(${TEST_SUBSCRIBE_NOTIFY_ONE_EVENT_TWO_EVENTGROUPS_SERVICE} gtest)
-    add_dependencies(${TEST_SUBSCRIBE_NOTIFY_ONE_EVENT_TWO_EVENTGROUPS_CLIENT} gtest)
-    add_dependencies(${TEST_SUBSCRIBE_NOTIFY_ONE_SERVICE} gtest)
-    add_dependencies(${TEST_CPU_LOAD_SERVICE} gtest)
-    add_dependencies(${TEST_CPU_LOAD_CLIENT} gtest)
-    add_dependencies(${TEST_INITIAL_EVENT_SERVICE} gtest)
-    add_dependencies(${TEST_INITIAL_EVENT_CLIENT} gtest)
-    add_dependencies(${TEST_INITIAL_EVENT_AVAILABILITY_CHECKER} gtest)
-    add_dependencies(${TEST_INITIAL_EVENT_STOP_SERVICE} gtest)
-    add_dependencies(${TEST_OFFER_SERVICE} gtest)
-    add_dependencies(${TEST_OFFER_CLIENT} gtest)
-    add_dependencies(${TEST_OFFER_SERVICE_EXTERNAL} gtest)
-    add_dependencies(${TEST_OFFER_EXTERNAL_SD_MESSAGE_SENDER} gtest)
-    add_dependencies(${TEST_OFFERED_SERVICES_INFO_CLIENT} gtest)
-    add_dependencies(${TEST_OFFERED_SERVICES_INFO_SERVICE} gtest)
-    add_dependencies(${TEST_PENDING_SUBSCRIPTION_SERVICE} gtest)
-    add_dependencies(${TEST_PENDING_SUBSCRIPTION_CLIENT} gtest)
-    add_dependencies(${TEST_MALICIOUS_DATA_SERVICE} gtest)
-    add_dependencies(${TEST_MALICIOUS_DATA_CLIENT} gtest)
-    if (${TEST_SECURITY})
-        add_dependencies(${TEST_SECURITY_SERVICE} gtest)
-        add_dependencies(${TEST_SECURITY_CLIENT} gtest)
-    endif()
-    add_dependencies(${TEST_E2E_SERVICE} gtest)
-    add_dependencies(${TEST_E2E_CLIENT} gtest)
-    if (${TEST_E2E_PROFILE_04})
-    add_dependencies(${TEST_E2E_PROFILE_04_SERVICE} gtest)
-    add_dependencies(${TEST_E2E_PROFILE_04_CLIENT} gtest)
-    endif()
-    add_dependencies(${TEST_EVENT_SERVICE} gtest)
-    add_dependencies(${TEST_EVENT_CLIENT} gtest)
-    add_dependencies(${TEST_NPDU_SERVICE_ONE} gtest)
-    add_dependencies(${TEST_NPDU_SERVICE_TWO} gtest)
-    add_dependencies(${TEST_NPDU_SERVICE_THREE} gtest)
-    add_dependencies(${TEST_NPDU_SERVICE_FOUR} gtest)
-    add_dependencies(${TEST_NPDU_CLIENT_ONE} gtest)
-    add_dependencies(${TEST_NPDU_CLIENT_TWO} gtest)
-    add_dependencies(${TEST_NPDU_CLIENT_THREE} gtest)
-    add_dependencies(${TEST_NPDU_CLIENT_FOUR} gtest)
-    add_dependencies(${TEST_NPDU_DAEMON_CLIENT} gtest)
-    add_dependencies(${TEST_NPDU_DAEMON_SERVICE} gtest)
-    add_dependencies(${TEST_SOMEIPTP_CLIENT} gtest)
-    add_dependencies(${TEST_SOMEIPTP_SERVICE} gtest)
-    if(${TEST_SECOND_ADDRESS})
-        add_dependencies(${TEST_SECOND_ADDRESS_CLIENT} gtest)
-        add_dependencies(${TEST_SECOND_ADDRESS_SERVICE} gtest)
-    endif()
-    add_dependencies(${TEST_SUSPEND_RESUME_CLIENT} gtest)
-    add_dependencies(${TEST_SUSPEND_RESUME_SERVICE} gtest)
-else()
-    add_dependencies(${TEST_LOCAL_ROUTING_SERVICE} gtest)
-    add_dependencies(${TEST_LOCAL_ROUTING_CLIENT} gtest)
-endif()
-
 ##############################################################################
 # Add tests to the target build_network_tests
 ##############################################################################
-- 
2.25.1

