From 4e5c5a245f248976ea55fe1f805badb0cb1bb072 Mon Sep 17 00:00:00 2001
From: Khem Raj <raj.khem@gmail.com>
Date: Fri, 30 Dec 2022 23:41:36 -0800
Subject: [PATCH] Do not undefine _FILE_OFFSET_BITS

This does not work when we want to use 64bit time_t in glibc
therefore let system decide on defining these macros

Upstream-Status: Pending

Signed-off-by: Khem Raj <raj.khem@gmail.com>
---
 client/client_types.cpp  | 9 ---------
 client/hostinfo_unix.cpp | 9 ---------
 2 files changed, 18 deletions(-)

diff --git a/client/client_types.cpp b/client/client_types.cpp
index 2977ef7863..7653517302 100644
--- a/client/client_types.cpp
+++ b/client/client_types.cpp
@@ -22,15 +22,6 @@
 #include "zlib.h"
 #else
 #include "config.h"
-// Somehow having config.h define _FILE_OFFSET_BITS or _LARGE_FILES is
-// causing open to be redefined to open64 which somehow, in some versions
-// of zlib.h causes gzopen to be redefined as gzopen64 which subsequently gets
-// reported as a linker error.  So for this file, we compile in small files
-// mode, regardless of these settings
-#undef _FILE_OFFSET_BITS
-#undef _LARGE_FILES
-#undef _LARGEFILE_SOURCE
-#undef _LARGEFILE64_SOURCE
 #include <sys/stat.h>
 #include <sys/types.h>
 #include <zlib.h>
diff --git a/client/hostinfo_unix.cpp b/client/hostinfo_unix.cpp
index ff0b596221..0ad6841b39 100644
--- a/client/hostinfo_unix.cpp
+++ b/client/hostinfo_unix.cpp
@@ -26,15 +26,6 @@
 
 #if !defined(_WIN32) || defined(__CYGWIN32__)
 
-// Access to binary files in /proc filesystem doesn't work in the 64bit
-// files environment on some systems.
-// None of the functions here need 64bit file functions,
-// so undefine _FILE_OFFSET_BITS and _LARGE_FILES.
-//
-#undef _FILE_OFFSET_BITS
-#undef _LARGE_FILES
-#undef _LARGEFILE_SOURCE
-#undef _LARGEFILE64_SOURCE
 #include <iostream>
 #include <vector>
 #include <string>
-- 
2.39.0

