From 5b6d274664f92a6c6083f4d27a1b1604a326f22c Mon Sep 17 00:00:00 2001
From: Patrick Wicki <patrick.wicki@siemens.com>
Date: Sat, 5 Oct 2024 21:36:12 +0200
Subject: [PATCH] wasm: avoid cmake try_run when cross-compiling for x86

This fixes building the wasm micro runtime used when enabling wasm
support in fluentbit.
cmake try_run does not work when cross-compiling because the test program
cannot be executed:

| CMake Error: try_run() invoked in cross-compiling mode, please set the following cache variables appropriately:
|    TEST_WRGSBASE_RESULT (advanced)
| For details see .../fluentbit/3.1.9/build/TryRunResults.cmake
|      Write linear memory base addr to x86 GS register disabled
| -- Configuring incomplete, errors occurred!

Since we cannot run the test program, assume that the instruction is not
available and disable the option.

This patch is no longer needed once fluentbit updates WAMR, as it's been
fixed in https://github.com/bytecodealliance/wasm-micro-runtime/pull/3066.

Upstream-Status: Pending [https://github.com/fluent/fluent-bit/pull/8744]

Signed-off-by: Patrick Wicki <patrick.wicki@siemens.com>
---
 .../build-scripts/config_common.cmake                           | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lib/wasm-micro-runtime-WAMR-1.3.0/build-scripts/config_common.cmake b/lib/wasm-micro-runtime-WAMR-1.3.0/build-scripts/config_common.cmake
index e73ebc85f..c2504e007 100644
--- a/lib/wasm-micro-runtime-WAMR-1.3.0/build-scripts/config_common.cmake
+++ b/lib/wasm-micro-runtime-WAMR-1.3.0/build-scripts/config_common.cmake
@@ -408,7 +408,7 @@ if (WAMR_BUILD_STATIC_PGO EQUAL 1)
   add_definitions (-DWASM_ENABLE_STATIC_PGO=1)
   message ("     AOT static PGO enabled")
 endif ()
-if (WAMR_DISABLE_WRITE_GS_BASE EQUAL 1)
+if (WAMR_DISABLE_WRITE_GS_BASE EQUAL 1 OR CMAKE_CROSSCOMPILING)
   add_definitions (-DWASM_DISABLE_WRITE_GS_BASE=1)
   message ("     Write linear memory base addr to x86 GS register disabled")
 elseif (WAMR_BUILD_TARGET STREQUAL "X86_64"
