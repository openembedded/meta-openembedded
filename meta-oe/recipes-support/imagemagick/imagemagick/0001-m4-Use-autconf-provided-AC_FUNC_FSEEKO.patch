From 0912e49d58c2a5f455fabf76ab7dc61cfc44cfb9 Mon Sep 17 00:00:00 2001
From: Khem Raj <raj.khem@gmail.com>
Date: Thu, 30 Mar 2023 20:50:26 -0700
Subject: [PATCH] m4: Use autconf provided AC_FUNC_FSEEKO

This helps in building with autoconf 2.72

Upstream-Status: Pending
Signed-off-by: Khem Raj <raj.khem@gmail.com>
---
 m4/ac_func_fseeko.m4 | 18 +-----------------
 1 file changed, 1 insertion(+), 17 deletions(-)

diff --git a/m4/ac_func_fseeko.m4 b/m4/ac_func_fseeko.m4
index eaeabb978..f9b8859cf 100644
--- a/m4/ac_func_fseeko.m4
+++ b/m4/ac_func_fseeko.m4
@@ -53,20 +53,4 @@
 # --------------
 AN_FUNCTION([ftello], [AC_FUNC_FSEEKO])
 AN_FUNCTION([fseeko], [AC_FUNC_FSEEKO])
-AC_DEFUN([AC_FUNC_FSEEKO],
-[_AC_SYS_LARGEFILE_MACRO_VALUE(_LARGEFILE_SOURCE, 1,
-   [ac_cv_sys_largefile_source],
-   [Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2).],
-   [[#include <sys/types.h> /* for off_t */
-     #include <stdio.h>]],
-   [[int (*fp) (FILE *, off_t, int) = fseeko;
-     return fseeko (stdin, 0, 0) && fp (stdin, 0, 0);]])
-
-# We used to try defining _XOPEN_SOURCE=500 too, to work around a bug
-# in glibc 2.1.3, but that breaks too many other things.
-# If you want fseeko and ftello with glibc, upgrade to a fixed glibc.
-if test $ac_cv_sys_largefile_source != unknown; then
-  AC_DEFINE(HAVE_FSEEKO, 1,
-    [Define to 1 if fseeko (and presumably ftello) exists and is declared.])
-fi
-])# AC_FUNC_FSEEKO
+AC_FUNC_FSEEKO
-- 
2.40.0

