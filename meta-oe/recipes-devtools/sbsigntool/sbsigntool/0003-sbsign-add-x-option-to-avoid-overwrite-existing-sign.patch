From 0c9efb490040b376abad5f51773680000beac28d Mon Sep 17 00:00:00 2001
From: Ilias Apalodimas <ilias.apalodimas@linaro.org>
Date: Wed, 10 Mar 2021 15:53:21 +0200
Subject: [PATCH] sbsign: add -x option to avoid overwrite existing signature

Upstream-Status: Inappropriate [embedded specific]

Signed-off-by: Lans Zhang <jia.zhang@windriver.com>
Signed-off-by: Ilias Apalodimas <ilias.apalodimas@linaro.org>
---
 src/sbsign.c | 17 +++++++++++++++--
 1 file changed, 15 insertions(+), 2 deletions(-)

diff --git a/src/sbsign.c b/src/sbsign.c
index 898fe66..3a5ed32 100644
--- a/src/sbsign.c
+++ b/src/sbsign.c
@@ -69,6 +69,7 @@ struct sign_context {
 };
 
 static struct option options[] = {
+	{ "noresign", no_argument, NULL, 'x' },
 	{ "output", required_argument, NULL, 'o' },
 	{ "cert", required_argument, NULL, 'c' },
 	{ "key", required_argument, NULL, 'k' },
@@ -94,6 +95,7 @@ static void usage(void)
 		"\t--addcert <addcertfile> additional intermediate certificates in a file\n"
 		"\t--detached         write a detached signature, instead of\n"
 		"\t                    a signed binary\n"
+		"\t--noresign         don't re-sign the binary if signed\n"
 		"\t--output <file>    write signed data to <file>\n"
 		"\t                    (default <efi-boot-image>.signed,\n"
 		"\t                    or <efi-boot-image>.pk7 for detached\n"
@@ -155,7 +157,7 @@ int main(int argc, char **argv)
 	const char *keyfilename, *certfilename, *addcertfilename, *engine;
 	struct sign_context *ctx;
 	uint8_t *buf, *tmp;
-	int rc, c, sigsize;
+	int rc, c, sigsize, no_resign = 0;
 	EVP_PKEY *pkey;
 
 	ctx = talloc_zero(NULL, struct sign_context);
@@ -167,11 +169,14 @@ int main(int argc, char **argv)
 
 	for (;;) {
 		int idx;
-		c = getopt_long(argc, argv, "o:c:k:dvVhe:a:", options, &idx);
+		c = getopt_long(argc, argv, "xo:c:k:dvVhe:a:", options, &idx);
 		if (c == -1)
 			break;
 
 		switch (c) {
+		case 'x':
+			no_resign = 1;
+			break;
 		case 'o':
 			ctx->outfilename = talloc_strdup(ctx, optarg);
 			break;
@@ -228,6 +233,14 @@ int main(int argc, char **argv)
 	if (!ctx->image)
 		return EXIT_FAILURE;
 
+	if (ctx->image->cert_table) {
+		if (no_resign) {
+			fprintf(stderr,
+				"Don't overwrite existing signature\n");
+			return EXIT_SUCCESS;
+		}
+	}
+
 	talloc_steal(ctx, ctx->image);
 
 	ERR_load_crypto_strings();
-- 
2.25.1

